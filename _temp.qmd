---
#title: "Tutorials: A Brief Overview"
format:
  html:
    page-layout: full
    grid:
      #sidebar-width: 250px
      sidebar-width: 0px
      body-width: 2000px
      margin-width: 0px
      #gutter-width: 1.5rem
    #mermaid:
      #theme: forest
    css: styles.css
#    theme: cosmo
#    fontsize: 1.1em
#    linestretch: 1.7


---


---
\[psychometrics as a new "Part" below, or facets of psychometrics (e.g., invariance, reliability, etc...) inserted above? MEASUREMENT CONSIDERATIONS IN LONGITUDINAL RESEARCH?\]
[[
- SectionIIIa on Data Structures and Data Wrangling(?)
- SectionIIIb on Psychometrics(?)
- SectionIIIc on Methods/Analyses(?)
]]

Measurement?
Data Wrangling?


With the large and continually expanding body of research on statistical methods for longitudinal analyses, determining which longitudinal model to implement can be challenging. The aim of this section is to help researchers to navigate these many options in order to identify the statistical approach most appropriate to their unique research question. Notably, there are a myriad of viable ways one can go about grouping various types of longitudinal models for presentation. Common examples iclude grouping by linearity (linear vs nonlinear models; see Collins, 2006(?)), the number of measurement occassions (see King et al., 2018), and xxxxxx (see xxxx, xxx). The ordering/organzation we use below overlaps in a number of ways with these examples, and with Curran & Bauer (2019); however, it is important to note that in each case, the ordering/organization that is chosen is somewhat arbitrary and primarly intended to allow the reader to compare and contrast of various analytic approaches. In the following we will describe (briefly) and summarize the advantages/disadvantages for a variety longitudinal models, organized into the following x# `fuzzy` groupings: Traditional Models, Modern GLM Extensions, SEM, Advanced SEM, xxx, xxxx. We note that this is note an exhaustive review of each of these methods, but for more in-depth detail we do provide the reader relevant resources. As aptly summarized by Curran & Bauer (2019), "there are many exceptions, alternatives, nuances, “what ifs”, and “but couldn’t yous” that aren’t addressed here." 

##### Traditional Models

Traditional methods for longitudinal analysis primarily focus on modeling mean-level change. 
For example, is there a difference in average math scores obtained across multiple assessments between boys and girls? Longitudinal models that focus on mean-level change are also referred to as `marginal models` and examples of specific methods include `repeated measures ANOVA` (and `MANOVA`), `ANCOVA`, and `Generalized Estimating Equations` (GEE). These methods are commonly used when data is only available from 2 measurement occassions. For example, computing a `difference score` (e.g., math scores at t2 - math scores at t1) that can be used as an outcome in a subsequent GLM analysis (e.g., paired-samples t-test, repeated measures ANOVA) to test for differences in patterns of change over time and between groups.
We also note the longitudinal `signed-rank test` which is a nonparametric alternative to the paired t-test that can be a useful tool for analyzing non-normal paired data. Another common approach, often used in pre-/post-design studies, is to use `residualized change score analysis` to assess the degree of change in a variable, while controlling for its initial level. For example, regressing post-treatment scores on pre-treatment scores and then using the resulting residuals as a measure of change that is adjusted for baseline scores (ignoring any prior group assignments/differences). Similar to difference scores, the residualized change score is often included in subsequent analysis, such as for evaluating intervention effects in pre-test/post-test designs [@Kisbu-Sakarya2013].

Traditional longitudinal methods can still be useful in some contexts (e.g., < 3 measurement occasions), but overall their practical utility for answering questions about developmental processes is limited. Perhaps most notably, these models do not allow for characterizing patterns of within-person change, which is often an emphasis of longitudinal research.
Moreover, even determining which of these procedures to use for comparing change over two time points across groups can be surprisingly complicated. A particularly vexing example is that of imbalanced baseline scores which can produce biased effects when using these methods. Indeed, it is well-documented that this can result in different conclusions between these approaches, which has led to many articles debating the merits of which procedures is most appropriate to use and when [see xxxxx for a review]. Beyond these concerns, additional limitations include xxxxxx. Given these shortcomings and the complexity of the issues surrounding some of these methods, when possible, it is typically recommended that researchers make use of more modern approaches for analyzing longitudinal data (and preferably make use of data collected across 3 or more time points.  

xxxxxxxxx
Many advantages of traditional approaches 
 straightforward to estimate as standard path models 
 obtain overall tests of fit and tests direct and indirect effects 
 corresponds to some models of change posited by some theories 

 But also many disadvantages 
 only considers change in a series of two time-point comparisons 
 assumes all measures have perfect reliability 
 can be biased if systematic growth exists in repeated measures 
 poorly corresponds to most theoretical models of change

zzzzzzzzzxxxxxxx

Modern approaches to longitudinal data analysis have advanced beyond traditional methods by offering greater flexibility and a more in-depth understanding of within-person and between-person variability. `Generalized Estimating Equations (GEE)`, `Linear Mixed Models (LMM)`, `Generalized Linear Mixed Models (GLMM)`, and `Autoregressive Cross-Lagged Panel Models (ARCL)` are examples of such contemporary techniques. GEE is an extension of Generalized Linear Models. This model combines the generalized linear model for non-normal outcomes with repeated measures (marginal) model and is suitable for analyzing correlated longitudinal data and modeling population-averaged effects. LMMs, also known as multilevel or hierarchical linear models, facilitate the simultaneous analysis of within-person and between-person variability, making them ideal for nested data structures or repeated measures. GLMMs further extend the LMM framework to accommodate non-normal response variables, such as binary, count, or ordinal data. Finally, ARCL models are uses to investigate reciprocal relationships between variables over time, as they estimate both autoregressive and cross-lagged effects. 

The strengths of these modern methods lie in their ability to account for individual differences, within-person change, and time-varying predictors, thereby providing a more comprehensive understanding of complex relationships in longitudinal data. Despite these advantages, modern approaches may require more complex modeling assumptions and higher computational demands compared to traditional methods. Additionally, proper model specification and the interpretation of results can be more challenging, especially in cases of high multicollinearity or missing data. However, modern longitudinal analysis methods have generally surpassed traditional methods in addressing a wider range of research questions, accommodating diverse data structures, and elucidating the intricate dynamics of developmental processes.




Overview—A GEE model is designed for analyzing the regression relationship between covariates and repeated responses, but not the correlation structure of the repeated responses. If the latter is of interest, a GEE is inappropriate and one should consider MER (“Mixed effects regression (MER)” section). In estimating the regression parameters, the correlation structure in a GEE is represented using a working, potentially incorrect model (see “Modeling correlation” section). Even when the working model is incorrect, however, the GEE approach yields unbiased parameter estimates. Traditionally, GEEs are intended for two-level hierarchical data (e.g., cases 1 and 2), but recent work [15] has allowed extensions to three levels (e.g., case 3).

Generalized estimating equations (GEEs) are a statistical method used to analyze longitudinal or clustered data, while accounting for within-subject correlation. The goal GEEs are to make inferences about population-averaged effects (controlling for within-subject correlations), rather than individual subject-level effects. GEEs can handle a wide range of outcome distributions, including binary, count, and continuous data (Fitzmaurice et al., 2011; Hardin & Hilbe, 2012). 





GLMM. Unlike the WGEE, the GLMM accommodates correlated responses Yit by directly modeling their joint distribution. Since multivariate distributions are extremely complex except for the multivariate normal, latent variables bi are generally employed to model the correlated responses. Thus, although Yit is still modeled for each time point t, by including the random effect b, in the specification of the conditional distribution of Yit given bi (Xit and Zit), the GLMM in (9) allows the resulting Yit ‘s to be correlated (conditional on Xit and Zit only). This approach allows one to specify multivariate distributions using familiar univariate distributions such as the Bernoulli (for binary responses) and the Poisson (for count responses).

zzzzzzzzzxxxxxxx
##### Modern GLM Extensions
**Generalized Linear Mixed Models** 
**Linear Mixed Models**
**Generalized Linear Mixed Models**
**ARCL**

`Generalized Linear Mixed Models`, `Linear Mixed Models`, `Generalized Linear Mixed Models`, `Autoregressive Crosslagged Panel Models`

Two preferred methods for longitudinal data are generalized estimating equations model (GEE) [13] and mixed effects regression (MER) [14]. Both allow time-invariant predictors that never change (e.g., gender, genotype) and time-varying predictors (e.g., age), and handle irregularly timed and missing data without the need for explicit imputation.

GEE particularly popular in longitudinal health research because it
provides robust inferences without making strong assumptions
about individual differences
 Particularly useful when working with discrete outcomes

 Those that emphasize individual change often do so through
inclusion of Random Effects
 often called “growth models”

 and individual-level (within person) change…
 What do individual trajectories of vocabulary production look like?
 How great are the individual differences in these trajectories?

include bullet points to summarize?
 
##### SEM
Variable-centered. 
**Latent Change Score** (add internal link to documentation)
**Latent Growth Curve Model** (add internal link to documentation)
**Multivariate Latent Growth Curve Model** (add internal link to documentation) 
**State-Trait Model** (add internal link to documentation)

 Those that emphasize individual change often do so through
inclusion of Random Effects
 often called “growth models”

Within-person change Panel (3+waves)

Within-person change Panel (3+waves) Quantitative Ind. Differences:
mixed effects, latent curve
ind. Differences:
Latent class growth analysis,
Semiparametric groups-based approach
General growth mixture model


Person-centered.
**Latent Transition Analysis** (add internal link to documentation)
**Latent Class Growth Analysis** (add internal link to documentation)

Progression through
stages/sequence
Panel data Latent transition analysis

Hybrid.
**Growth Mixture Modeling** (add internal link to documentation)

##### Advanced SEM
**RI-CLPM** (add internal link to documentation)
**LCM-SR** (add internal link to documentation)

Examine
relationships
between timeadjacent changes

Change + bidirectional Panel data Latent curve model with structured residuals
Timing of predictor effects Intensive longitudinal
Long-term panel
Time-varying effects models


##### (possibly others xxxx?)
(longitudinal neuroimaging?)
(longitudinal twins/genetics?)

![Longitudinal Models/Data Structures](./figures/Mindmap1.png){#fig-LONGmod fig-alt="Longitudinal Models Diagram." width="600" height="400" fig-align="center"}


### Brief section to wrap up (and highlight the availiblity of the online examples)


xxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxx

Data structures are the building blocks for more sophisticated applications. They are designed by composing data elements into a logical unit representing an abstract data type that has relevance to the algorithm or application. An example of an abstract data type is a "customer name" that is composed of the character strings for "first name," "middle name" and "last name."

It is not only important to use data structures, but it is also important to choose the proper data structure for each task. Choosing an ill-suited data structure could result in slow runtimes or unresponsive code. Five factors to consider when picking a data structure include the following:

What kind of information will be stored?
How will that information be used?
Where should data persist, or be kept, after it is created?
What is the best way to organize the data?
What aspects of memory and storage reservation management should be considered?

the choice of several types of longitudinal designs that researchers employ to investigate change over time. 
Clarify the analysis approaches that are associated with each type of data structure and the questions they can answer

Section focused on different ways of considering/grouping/deciding on which specific analysis to choose (see curran&bauer slides)

data structure is not only used for organizing the data. It is also used for processing, retrieving, and storing data
The data structure type used in a particular situation is determined by the type of operations that will be required or the kinds of algorithms that will be applied.

types of data structures, all designed to arrange data to suit a specific purpose. Data structures make it easy for users to access and work with the data they need in appropriate ways. Most importantly, data structures frame the organization of information so that machines and humans can better understand it.

applications that ingest, manipulate and produce information must understand how data should be organized to simplify processing. Data structures bring together the data elements in a logical way and facilitate the effective use, persistence and sharing of data. They provide a formal model that describes the way the data elements are organized.



xxxxxxx
This article provides an overview of the imaging procedures of the ABCD study, the basis for their selection and preliminary quality assurance and results that provide evidence for the feasibility and age-appropriateness of procedures and generalizability of findings to the existent literature.

Retention is critical in longitudinal, multi-site studies of adolescents.

•
Differential retention can impact generalizability of study outcomes.

•
We review efforts utilized by the ABCD study staff to ensure high retention.


Learning What To Do: Survey of Techniques

Objectives  Distinguish between different longitudinal data structures 
 Clarify the analysis approaches that are associated with each type of data structure and the questions they can answer

Panel Data  Most often, what we mean by longitudinal data is panel data  Panel data is data collected over a relatively small number of time points on a relatively large number of units  Examples:  Biennial assessments of alcohol and substance use in adolescents and young adults from ages 14 to 30.  Monthly assessments of vocabulary production by infants/toddlers from 8 to 24 months of age  Other similar data structures arise from  Randomized clinical trials  Accelerated longitudinal designs

Analysis Goals  A common goal when collecting panel data is to evaluate change over time  One can distinguish between mean-level change...  On average, how much more quickly does the vocabulary production of girls increase relative to the vocabulary production of boys?  and individual-level (within person) change...  What do individual trajectories of vocabulary production look like?  How great are the individual differences in these trajectories?



traditional and contemporary approaches to modeling developmental change

Theoretical Model of Change
Temporal Design Used to Observe the Change Phenomenon
Statistical Model of Change










xxxxxxx

Evaluate the measurement properties of the variable for invariance (e.g., configural, metric) before testing whether change has occurred. Analytical Issues 10. Be aware of potential violations in statistical assumptions inherent in longitudinal designs (e.g., correlated residuals, nonindependence). 11. Describe how time is coded (e.g., polynomials, orthogonal polynomials) and why.

```{html}
<div class="alert alert-primary" role="alert">
  This is a primary alert—check it out!
</div>
```

xxxyyyzzz
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```       
\begin{tabular}[t]{@{}l}
This is where the reciepient goes \\ 
Address 1 \\
Address 2 \\
Address 3 \\
Address 3 \\
\end{tabular}
\hfill
\begin{tabular}[t]{@{}l}
This is where the sender goes \\  
Person \\
Department \\ 
Address 1 \\ 
Address 2 \\  
Address 3 \\  
Address 4 \\  
Address 5 \\  
Address 6 \\ 
Telephone \\  
Fax \\  
Email \\
\end{tabular}

xxxyyyzzz
xxxxx

<div class="alert alert-primary" role="alert">
  This is a primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.
</div>

<span class="badge badge-pill badge-primary">Primary</span>


<a href="#" class="badge badge-primary">Primary</a>

<div class="card" style="width: 18rem;">
  <img class="card-img-top" src="..." alt="Card image cap">
  <div class="card-body">
    <div class="card-title">Card title</div>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

<div class="card">
  <div class="card-body">
    This is some text within a card body.
  </div>
</div>



<div class="card" style="width: 18rem;">
  <img class="card-img-top" src="..." alt="Card image cap">
  <div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
  </div>
  <ul class="list-group list-group-flush">
    <li class="list-group-item">Cras justo odio</li>
    <li class="list-group-item">Dapibus ac facilisis in</li>
    <li class="list-group-item">Vestibulum at eros</li>
  </ul>
  <div class="card-body">
    <a href="#" class="card-link">Card link</a>
    <a href="#" class="card-link">Another link</a>
  </div>
</div>

<div class="card">
  <div class="card-header">
    Featured
  </div>
  <div class="card-body">
    <h5 class="card-title">Special title treatment</h5>
    <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

<div class="card">
  <h5 class="card-header">Featured</h5>
  <div class="card-body">
    <h5 class="card-title">Special title treatment</h5>
    <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

<div class="card text-white bg-primary mb-3" style="max-width: 18rem;">
  <div class="card-header">Header</div>
  <div class="card-body">
    <h5 class="card-title">Primary card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
  </div>
</div>

<div class="card border-primary mb-3" style="max-width: 18rem;">
  <div class="card-header">Header</div>
  <div class="card-body text-primary">
    <h5 class="card-title">Primary card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
  </div>
</div>

<div class="card border-success mb-3" style="max-width: 18rem;">
  <div class="card-header bg-transparent border-success">Header</div>
  <div class="card-body text-success">
    <h5 class="card-title">Success card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
  </div>
  <div class="card-footer bg-transparent border-success">Footer</div>
</div>
<div class="alert alert-success" role="alert">
  <h4 class="alert-heading">Well done!</h4>
  <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>
  <hr>
  <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>
</div>

<dl class="row">
  <dt class="col-sm-3">Description lists</dt>
  <dd class="col-sm-9">A description list is perfect for defining terms.</dd>

  <dt class="col-sm-3">Euismod</dt>
  <dd class="col-sm-9">
    <p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p>
    <p>Donec id elit non mi porta gravida at eget metus.</p>
  </dd>

  <dt class="col-sm-3">Malesuada porta</dt>
  <dd class="col-sm-9">Etiam porta sem malesuada magna mollis euismod.</dd>

  <dt class="col-sm-3 text-truncate">Truncated term is truncated</dt>
  <dd class="col-sm-9">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>

  <dt class="col-sm-3">Nesting</dt>
  <dd class="col-sm-9">
    <dl class="row">
      <dt class="col-sm-4">Nested definition list</dt>
      <dd class="col-sm-8">Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.</dd>
    </dl>
  </dd>
</dl>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>

<button type="button" class="btn btn-lg btn-danger" data-toggle="popover" title="Popover title" data-content="And here's some amazing content. It's very engaging. Right?">Click to toggle popover</button>

<div class="w-25 p-3" style="background-color: #eee;">Width 25%</div>
<div class="w-50 p-3" style="background-color: #eee;">Width 50%</div>
<div class="w-75 p-3" style="background-color: #eee;">Width 75%</div>
<div class="w-100 p-3" style="background-color: #eee;">Width 100%</div>

<div style="height: 100px; background-color: rgba(255,0,0,0.1);">
  <div class="h-25 d-inline-block" style="width: 120px; background-color: rgba(0,0,255,.1)">Height 25%</div>
  <div class="h-50 d-inline-block" style="width: 120px; background-color: rgba(0,0,255,.1)">Height 50%</div>
  <div class="h-75 d-inline-block" style="width: 120px; background-color: rgba(0,0,255,.1)">Height 75%</div>
  <div class="h-100 d-inline-block" style="width: 120px; background-color: rgba(0,0,255,.1)">Height 100%</div>
</div>

<p class="text-justify">Ambitioni dedisse scripsisse iudicaretur. Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus. Praeterea iter est quasdam res quas ex communi. At nos hinc posthac, sitientis piros Afros. Petierunt uti sibi concilium totius Galliae in diem certam indicere. Cras mattis iudicium purus sit amet fermentum.</p>

<p class="text-left">Left aligned text on all viewport sizes.</p>
<p class="text-center">Center aligned text on all viewport sizes.</p>
<p class="text-right">Right aligned text on all viewport sizes.</p>

<p class="text-sm-left">Left aligned text on viewports sized SM (small) or wider.</p>
<p class="text-md-left">Left aligned text on viewports sized MD (medium) or wider.</p>
<p class="text-lg-left">Left aligned text on viewports sized LG (large) or wider.</p>
<p class="text-xl-left">Left aligned text on viewports sized XL (extra-large) or wider.</p>

<p class="font-weight-bold">Bold text.</p>
<p class="font-weight-normal">Normal weight text.</p>
<p class="font-weight-light">Light weight text.</p>
<p class="font-italic">Italic text.</p>

<table class="table table-bordered">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">First</th>
      <th scope="col">Last</th>
      <th scope="col">Handle</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">1</th>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <th scope="row">2</th>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <th scope="row">3</th>
      <td colspan="2">Larry the Bird</td>
      <td>@twitter</td>
    </tr>
  </tbody>
</table>


<blockquote class="blockquote">
  <p class="mb-0">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
</blockquote>

<table class="table">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">First</th>
      <th scope="col">Last</th>
      <th scope="col">Handle</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">1</th>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <th scope="row">2</th>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>Larry</td>
      <td>the Bird</td>
      <td>@twitter</td>
    </tr>
  </tbody>
</table>





<table class="hover:table-fixed">
  <thead>
    <tr>
      <th>Song</th>
      <th>Artist</th>
      <th>Year</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>The Sliding Mr. Bones (Next Stop, Pottersville)</td>
      <td>Malcolm Lockyer</td>
      <td>1961</td>
    </tr>
    <tr>
      <td>Witchy Woman</td>
      <td>The Eagles</td>
      <td>1972</td>
    </tr>
    <tr>
      <td>Shining Star</td>
      <td>Earth, Wind, and Fire</td>
      <td>1975</td>
    </tr>
  </tbody>
</table>

::: {.column-screen}
![-](./figures/Figlanding5.svg)
:::

xxxxx


file:///Users/shawes/git/swhawes.github.io/docs/manuscript.html
xxxxx

```{dot}
digraph "Linux_kernel_diagram" {
	fontname="Helvetica,Arial,sans-serif"
	node [fontname="Helvetica,Arial,sans-serif"]
	edge [fontname="Helvetica,Arial,sans-serif"]
	graph [
		newrank = true,
		nodesep = 0.3,
		ranksep = 0.2,
		overlap = true,
		splines = false,
	]
	node [
		fixedsize = false,
		fontsize = 24,
		height = 1,
		shape = box,
		style = "filled,setlinewidth(5)",
		width = 2.2
	]
	edge [
		arrowhead = none,
		arrowsize = 0.5,
		labelfontname = "Ubuntu",
		weight = 10,
		style = "filled,setlinewidth(5)"
	]
	subgraph system {
		node [color = "#e27dd6ff"]
		edge [color = "#e27dd6ff"]
		system_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			shape = point
		]
		system [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/System",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		system -> system_ [
			arrowhead = "",
			row = func];
		SCI [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Syscalls",
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "System calls",
			row = usr,
			shape = ellipse]
		sysfs [
			fillcolor = "#b2d3e4",
			label = "proc & sysfs\nfile systems"]
		SCI -> sysfs
		DM [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			height = 0.8,
			label = "Device\nModel",
			shape = octagon,
			width = 2]
		sysfs -> DM
		log_sys [
			fillcolor = "#6a9ab1",
			fontsize = 20,
			label = "system run,\nmodules,\ngeneric\nHW access "]
		DM -> log_sys
		bus_drv [
			fillcolor = "#71809b",
			label = "bus drivers"]
		log_sys -> bus_drv
		buses [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "buses:\nPCI, USB ...",
			row = chip]
		bus_drv -> buses
	}
	subgraph networking {
		node [color = "#61c2c5"]
		edge [color = "#61c2c5"]
		networking_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			shape = point
				width = 0]
		networking [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Networking",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		networking -> networking_ [
			arrowhead = "",
			row = func]
		sock [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = Sockets,
			row = usr,
			shape = ellipse]
		prot_fam [
			fillcolor = "#b2d3e4",
			label = "protocol\nfamilies"]
		sock -> prot_fam
		log_prot [
			fillcolor = "#6a9ab1",
			label = "protocols:\nTCP, UDP, IP"]
		prot_fam -> log_prot
		netif [
			fillcolor = "#71809b",
			fontsize = 20,
			label = "network\ninterfaces\nand drivers"]
		log_prot -> netif
		net_hw [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "network:\nEthernet, WiFi ...",
			row = chip]
		netif -> net_hw
		NFS [
			color = "#8383cc",
			fillcolor = "#91b5c9",
			fixedsize = true,
			height = 0.8,
			label = NFS,
			shape = octagon,
			width = 1.2]
		NFS -> log_prot [weight = 0]
	}
	subgraph processing {
		node [color = "#c46747"]
		edge [color = "#c46747"]
		processing_ [
			fixedsize = true,
			height = 0,
			shape = point
				style = invis,
			width = 0]
		processing [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Processing",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		processing -> processing_ [
			arrowhead = "",
			row = func]
		proc [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = Processes,
			row = usr,
			shape = ellipse]
		Tasks [
			fillcolor = "#b2d3e4"]
		proc -> Tasks
		sync [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			fontname = "Arial Narrow"
			label = synchronization,
			height = 0.7,
			//width = 2,
			shape = octagon]
		Tasks -> sync
		sched [
			fillcolor = "#6a9ab1",
			label = Scheduler]
		sync -> sched
		IRQ [
			fillcolor = "#71809b",
			fontsize = 20,
			label = "interrupts\ncore,\nCPU arch"]
		sched -> IRQ
		CPU [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			row = chip]
		IRQ -> CPU
	}	// processing
	subgraph mem {
		node [
			color = "#51bf5b",
			height = 1
		]
		edge [color = "#51bf5b"]
		MA [
			color = "#51bf5b",
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "memory\naccess",
			row = usr,
			height = 1,
			shape = ellipse]
		MA -> VM
		mmap [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			height = 0.8,
			label = "memory\nmapping",
			shape = octagon,
			width = 2]
		mmap -> log_mem
		log_mem -> PA
		SW [
			color = "#8383cc",
			fillcolor = "#91b5c9",
			fixedsize = true,
			label = Swap,
			height = 0.8,
			shape = octagon,
			width = 1.2]
		mmap -> SW [weight = 1]
		SW -> block [
			color = "#8383cc", weight = 1]
		PA [
			fillcolor = "#71809b",
			label = "Page\nAllocator"
		]
		PC -> PA [weight = 0 color="#51bf5b"]
		RAM [
			color = "#51bf5b",
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "MMU, RAM",
			height = 1,
			row = chip]
		PA -> RAM
		memory -> memory_ [
			arrowhead = "",
			row = func]
		VM -> mmap
	}	// mem
	subgraph storage {
		node [color = "#8383cc"]
		edge [color = "#8383cc"]
		NFS;
		storage_ [
			shape = point,
			fixedsize = true,
			height = 0,
			style = invis,
			width = 0]
		storage [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Storage",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		storage -> storage_ [
			arrowhead = "",
			row = func]
		FS [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "files and\ndirectories",
			row = usr,
			shape = ellipse]
		VFS [
			fillcolor = "#b2d3e4",
			label = "Virtual\nFile System"]
		FS -> VFS
		VFS -> mmap [weight = 0]
		VFS -> NFS [weight = 0]
		logFS [
			fillcolor = "#6a9ab1",
			fontsize = 20,
			label = "logical\nfilesystems:\next3, xfs ..."]
		VFS -> logFS
		PC [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			height = 0.8,
			label = "page\ncache",
			shape = octagon,
			width = 1.2]
		VFS -> PC [weight = 0]
		block [
			fillcolor = "#71809b",
			fontsize = 20,
			label = "Block\ndevices\nand drivers"]
		logFS -> block
		SD [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "storage devices:\nSCSI, NVMe ...",
			row = chip]
		block -> SD
	}	// storge
	subgraph HI {
		node [color = "#cfbf57ff"]
		edge [
			color = "#cfbf57ff",
			weight = 10
		]
		HI_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		HI [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Human_interfaces",
			fillcolor = white,
			fixedsize = true,
			fontsize = 12,
			height = 0.6,
			label = "Forms\nof\nchange",
			row = func,
			width = 2]
		HI -> HI_ [
			arrowhead = "",
			row = func]
		char [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "char\ndevices",
			row = usr,
			shape = ellipse]
		input [
			fillcolor = "#b2d3e4",
			label = "input\nsubsystem"]
		char -> input
		F7 [
			fillcolor = "#6a9ab1",
			label = "HI class\ndrivers"]
		input -> F7
		HID [
			fillcolor = "#71809b",
			fontsize = 20,
			URL = "https://www.kernel.org/doc/html/latest/hid/",
			label = "HI\nperipherals\ndrivers"]
		F7 -> HID
		display [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 19,
			label = "keyboard, mouse,\ndisplay, audio",
			row = chip]
		HID -> display
	} // HI
	subgraph functions {
		graph [rank = same]
		edge [
			style = invis,
			weight = 1
		]
		system;
		networking;
		system -> processing [weight = 1]
		storage -> networking [weight = 1]
		memory [
			color = "#51bf5b",
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Memory",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		memory -> storage [weight = 1]
		processing -> memory [weight = 1]
		functions_ [
			fixedsize = true,
			height = 0,
			shape = point
			style = invis,
			width = 0]
		functions_ -> HI -> system [weight = 1]
		functions [
			color = gray,
			tooltip = "Columns represent main functionalities of the kernel",
			URL = "http://www.makelinux.net/ldd3/chp-1-sect-2.shtml",
			fillcolor = gray,
			fixedsize = true,
			height = 0.6,
			row = func,
			style = dashed,
			width = 1.6]
		functions -> functions_ [
			arrowhead = "",
			color = gray,
			style = "",
			weight = ""]
	}
	subgraph interfaces {
		graph [rank = same]
		SCI;
		sock;
		FS;
		proc;
		char;
		usr_ [
			fixedsize = true,
			height = 0,
			shape = point
				style = invis,
			width = 0.5]
		usr [
			fillcolor = "#d9e7eeff",
			fixedsize = true,
			label = "user space\ninterfaces",
			row = usr,
			shape = ellipse,
			style = "filled,setlinewidth(0)"]
		MA;
	}
	{
		edge [style = invis weight = 10 ]
		system_;
		SCI;
		system_ -> SCI;
		networking_;
		sock;
		networking_ -> sock;
		storage_;
		FS;
		storage_ -> FS;
		processing_;
		proc;
		processing_ -> proc;
		HI_;
		char;
		HI_ -> char;
		MA;
		memory_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		memory_ -> MA;
	}
	subgraph virtual {
		graph [rank = same]
		sysfs;
		prot_fam;
		VFS;
		Tasks;
		input;
		D0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		virt [
			fillcolor = "#b2d3e4",
			label = "virtual\nsubsystems",
			URL = "https://en.wikipedia.org/wiki/Proxy_pattern",
			tooltip = "proxy between standard user space interfaces and internal implementations",
			style = "filled,setlinewidth(0)"]
		VM [
			color = "#51bf5b",
			fillcolor = "#b2d3e4",
			label = "Virtual\nmemory"]
	}
	subgraph bridges {
		graph [rank = same]
		bridges [
			fillcolor = "#91b5c9",
			shape = octagon,
			tooltip = "bridges between uniform virtual interfaces and various implementations",
			URL = "https://en.wikipedia.org/wiki/Bridge_pattern",
			style = "filled,setlinewidth(0)"]
		DM;
		NFS;
		mmap;
		sync;
		E0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		//PC
	}
	subgraph logical {
		graph [rank = same]
		log_sys;
		log_prot;
		logFS;
		sched;
		F7;
		F0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		logical [
			fillcolor = "#6a9ab1",
			style = "filled,setlinewidth(0)"]
		log_mem [
			color = "#51bf5b",
			fillcolor = "#6a9ab1",
			label = "logical\nmemory"]
		//SW
	}
	subgraph HWI {
		graph [rank = same]
		HWI [
			fillcolor = "#71809b",
			label = "hardware\ninterfaces",
			style = "filled,setlinewidth(0)"]
		bus_drv;
		netif;
		block;
		//PA;
		IRQ;
		HID;
		G0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
	}
	subgraph HW {
		graph [rank = same]
		HW [
			fillcolor = "#777777",
			fontcolor = white,
			label = "electronics,\nhardware",
			row = chip,
			style = "filled,setlinewidth(0)"]
		buses;
		net_hw;
		SD;
		CPU;
		display;
		H0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		RAM;
	}
	bottom [
		label = "© 2007-2022 Costa Shulyupin http://www.MakeLinux.net/kernel/diagram",
		URL = "http://www.MakeLinux.net/kernel/diagram",
		shape = plaintext,
		style = ""]
	CPU -> bottom [style = invis]
	layers [
		fillcolor = lightgray,
		tooltip = "Functionalities are divided to common layers. It is approximate division.",
		height = 0.1,
		style = "filled,setlinewidth(0)",
		width = 0.5]
	functions -> layers [style = invis ]
	usr -> usr_ [
		arrowhead = "",
		color = "#d9e7eeff",
		minlen = 2]
	usr -> virt [
		color = "#d9e7eeff"]
	virt -> D0 [
		arrowhead = "",
		color = "#b2d3e4",
		minlen = 2]
	virt -> bridges [
		color = "#b2d3e4"]
	bridges -> E0 [
		arrowhead = "",
		color = "#91b5c9",
		minlen = 2,
		style = "filled,setlinewidth(6)",
		weight = ""]
	bridges -> logical [
		color = "#91b5c9",
		style = "filled,setlinewidth(6)"]
	logical -> F0 [
		arrowhead = "",
		color = "#6a9ab1",
		minlen = 2,
		row = logical,
		style = "filled,setlinewidth(6)",
		weight = ""]
	logical -> HWI [
		color = "#6a9ab1",
		row = logical,
		style = "filled,setlinewidth(6)"]
	HWI -> G0 [
		arrowhead = "",
		color = "#71809b",
		minlen = 2,
		row = HWI,
		style = "filled,setlinewidth(6)",
		weight = ""]
	HWI -> HW [
		color = "#71809b",
		row = HWI,
		style = "filled,setlinewidth(6)"]
	HW -> H0 [
		arrowhead = "",
		color = "#777777",
		minlen = 2,
		row = chip,
		style = "filled,setlinewidth(6)",
		weight = ""]
	layers -> usr [
		arrowhead = "",
		color = gray,
		style = "filled,setlinewidth(1)"]
	LKD [
		fontsize = 40,
		label = "Linux kernel diagram",
		shape = plain,
		style = ""]
	LKD -> processing [style = invis]
}

```



xxxxx


![LPA Structure](./figures/LDA Structure 3.svg)


## Section III

Section focused on different ways of considering/grouping/deciding on which specific analysis to choose (see curran&bauer slides)



```{dot}
digraph "Linux_kernel_diagram" {
	fontname="Helvetica,Arial,sans-serif"
	node [fontname="Helvetica,Arial,sans-serif"]
	edge [fontname="Helvetica,Arial,sans-serif"]
	graph [
		newrank = true,
		nodesep = 0.3,
		ranksep = 0.2,
		overlap = true,
		splines = false,
	]
	node [
		fixedsize = false,
		fontsize = 24,
		height = 1,
		shape = box,
		style = "filled,setlinewidth(5)",
		width = 2.2
	]
	edge [
		arrowhead = none,
		arrowsize = 0.5,
		labelfontname = "Ubuntu",
		weight = 10,
		style = "filled,setlinewidth(5)"
	]
	subgraph system {
		node [color = "#e27dd6ff"]
		edge [color = "#e27dd6ff"]
		system_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			shape = point
		]
		system [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/System",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		system -> system_ [
			arrowhead = "",
			row = func];
		SCI [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Syscalls",
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "System calls",
			row = usr,
			shape = ellipse]
		sysfs [
			fillcolor = "#b2d3e4",
			label = "proc & sysfs\nfile systems"]
		SCI -> sysfs
		DM [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			height = 0.8,
			label = "Device\nModel",
			shape = octagon,
			width = 2]
		sysfs -> DM
		log_sys [
			fillcolor = "#6a9ab1",
			fontsize = 20,
			label = "system run,\nmodules,\ngeneric\nHW access "]
		DM -> log_sys
		bus_drv [
			fillcolor = "#71809b",
			label = "bus drivers"]
		log_sys -> bus_drv
		buses [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "buses:\nPCI, USB ...",
			row = chip]
		bus_drv -> buses
	}
	subgraph networking {
		node [color = "#61c2c5"]
		edge [color = "#61c2c5"]
		networking_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			shape = point
				width = 0]
		networking [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Networking",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		networking -> networking_ [
			arrowhead = "",
			row = func]
		sock [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = Sockets,
			row = usr,
			shape = ellipse]
		prot_fam [
			fillcolor = "#b2d3e4",
			label = "protocol\nfamilies"]
		sock -> prot_fam
		log_prot [
			fillcolor = "#6a9ab1",
			label = "protocols:\nTCP, UDP, IP"]
		prot_fam -> log_prot
		netif [
			fillcolor = "#71809b",
			fontsize = 20,
			label = "network\ninterfaces\nand drivers"]
		log_prot -> netif
		net_hw [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "network:\nEthernet, WiFi ...",
			row = chip]
		netif -> net_hw
		NFS [
			color = "#8383cc",
			fillcolor = "#91b5c9",
			fixedsize = true,
			height = 0.8,
			label = NFS,
			shape = octagon,
			width = 1.2]
		NFS -> log_prot [weight = 0]
	}
	subgraph processing {
		node [color = "#c46747"]
		edge [color = "#c46747"]
		processing_ [
			fixedsize = true,
			height = 0,
			shape = point
				style = invis,
			width = 0]
		processing [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Processing",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		processing -> processing_ [
			arrowhead = "",
			row = func]
		proc [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = Processes,
			row = usr,
			shape = ellipse]
		Tasks [
			fillcolor = "#b2d3e4"]
		proc -> Tasks
		sync [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			fontname = "Arial Narrow"
			label = synchronization,
			height = 0.7,
			//width = 2,
			shape = octagon]
		Tasks -> sync
		sched [
			fillcolor = "#6a9ab1",
			label = Scheduler]
		sync -> sched
		IRQ [
			fillcolor = "#71809b",
			fontsize = 20,
			label = "interrupts\ncore,\nCPU arch"]
		sched -> IRQ
		CPU [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			row = chip]
		IRQ -> CPU
	}	// processing
	subgraph mem {
		node [
			color = "#51bf5b",
			height = 1
		]
		edge [color = "#51bf5b"]
		MA [
			color = "#51bf5b",
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "memory\naccess",
			row = usr,
			height = 1,
			shape = ellipse]
		MA -> VM
		mmap [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			height = 0.8,
			label = "memory\nmapping",
			shape = octagon,
			width = 2]
		mmap -> log_mem
		log_mem -> PA
		SW [
			color = "#8383cc",
			fillcolor = "#91b5c9",
			fixedsize = true,
			label = Swap,
			height = 0.8,
			shape = octagon,
			width = 1.2]
		mmap -> SW [weight = 1]
		SW -> block [
			color = "#8383cc", weight = 1]
		PA [
			fillcolor = "#71809b",
			label = "Page\nAllocator"
		]
		PC -> PA [weight = 0 color="#51bf5b"]
		RAM [
			color = "#51bf5b",
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "MMU, RAM",
			height = 1,
			row = chip]
		PA -> RAM
		memory -> memory_ [
			arrowhead = "",
			row = func]
		VM -> mmap
	}	// mem
	subgraph storage {
		node [color = "#8383cc"]
		edge [color = "#8383cc"]
		NFS;
		storage_ [
			shape = point,
			fixedsize = true,
			height = 0,
			style = invis,
			width = 0]
		storage [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Storage",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		storage -> storage_ [
			arrowhead = "",
			row = func]
		FS [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "files and\ndirectories",
			row = usr,
			shape = ellipse]
		VFS [
			fillcolor = "#b2d3e4",
			label = "Virtual\nFile System"]
		FS -> VFS
		VFS -> mmap [weight = 0]
		VFS -> NFS [weight = 0]
		logFS [
			fillcolor = "#6a9ab1",
			fontsize = 20,
			label = "logical\nfilesystems:\next3, xfs ..."]
		VFS -> logFS
		PC [
			fillcolor = "#91b5c9",
			fixedsize = true,
			fontsize = 20,
			height = 0.8,
			label = "page\ncache",
			shape = octagon,
			width = 1.2]
		VFS -> PC [weight = 0]
		block [
			fillcolor = "#71809b",
			fontsize = 20,
			label = "Block\ndevices\nand drivers"]
		logFS -> block
		SD [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 20,
			label = "storage devices:\nSCSI, NVMe ...",
			row = chip]
		block -> SD
	}	// storge
	subgraph HI {
		node [color = "#cfbf57ff"]
		edge [
			color = "#cfbf57ff",
			weight = 10
		]
		HI_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		HI [
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Human_interfaces",
			fillcolor = white,
			fixedsize = true,
			fontsize = 12,
			height = 0.6,
			label = "human\ninterface",
			row = func,
			width = 2]
		HI -> HI_ [
			arrowhead = "",
			row = func]
		char [
			fillcolor = "#d9e7ee",
			fixedsize = true,
			label = "char\ndevices",
			row = usr,
			shape = ellipse]
		input [
			fillcolor = "#b2d3e4",
			label = "input\nsubsystem"]
		char -> input
		F7 [
			fillcolor = "#6a9ab1",
			label = "HI class\ndrivers"]
		input -> F7
		HID [
			fillcolor = "#71809b",
			fontsize = 20,
			URL = "https://www.kernel.org/doc/html/latest/hid/",
			label = "HI\nperipherals\ndrivers"]
		F7 -> HID
		display [
			fillcolor = "#777777",
			fontcolor = white,
			fontsize = 19,
			label = "keyboard, mouse,\ndisplay, audio",
			row = chip]
		HID -> display
	} // HI
	subgraph functions {
		graph [rank = same]
		edge [
			style = invis,
			weight = 1
		]
		system;
		networking;
		system -> processing [weight = 1]
		storage -> networking [weight = 1]
		memory [
			color = "#51bf5b",
			URL = "https://en.wikibooks.org/wiki/The_Linux_Kernel/Memory",
			fillcolor = white,
			fixedsize = true,
			height = 0.6,
			row = func,
			width = 2]
		memory -> storage [weight = 1]
		processing -> memory [weight = 1]
		functions_ [
			fixedsize = true,
			height = 0,
			shape = point
			style = invis,
			width = 0]
		functions_ -> HI -> system [weight = 1]
		functions [
			color = gray,
			tooltip = "Columns represent main functionalities of the kernel",
			URL = "http://www.makelinux.net/ldd3/chp-1-sect-2.shtml",
			fillcolor = gray,
			fixedsize = true,
			height = 0.6,
			row = func,
			style = dashed,
			width = 1.6]
		functions -> functions_ [
			arrowhead = "",
			color = gray,
			style = "",
			weight = ""]
	}
	subgraph interfaces {
		graph [rank = same]
		SCI;
		sock;
		FS;
		proc;
		char;
		usr_ [
			fixedsize = true,
			height = 0,
			shape = point
				style = invis,
			width = 0.5]
		usr [
			fillcolor = "#d9e7eeff",
			fixedsize = true,
			label = "user space\ninterfaces",
			row = usr,
			shape = ellipse,
			style = "filled,setlinewidth(0)"]
		MA;
	}
	{
		edge [style = invis weight = 10 ]
		system_;
		SCI;
		system_ -> SCI;
		networking_;
		sock;
		networking_ -> sock;
		storage_;
		FS;
		storage_ -> FS;
		processing_;
		proc;
		processing_ -> proc;
		HI_;
		char;
		HI_ -> char;
		MA;
		memory_ [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		memory_ -> MA;
	}
	subgraph virtual {
		graph [rank = same]
		sysfs;
		prot_fam;
		VFS;
		Tasks;
		input;
		D0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		virt [
			fillcolor = "#b2d3e4",
			label = "virtual\nsubsystems",
			URL = "https://en.wikipedia.org/wiki/Proxy_pattern",
			tooltip = "proxy between standard user space interfaces and internal implementations",
			style = "filled,setlinewidth(0)"]
		VM [
			color = "#51bf5b",
			fillcolor = "#b2d3e4",
			label = "Virtual\nmemory"]
	}
	subgraph bridges {
		graph [rank = same]
		bridges [
			fillcolor = "#91b5c9",
			shape = octagon,
			tooltip = "bridges between uniform virtual interfaces and various implementations",
			URL = "https://en.wikipedia.org/wiki/Bridge_pattern",
			style = "filled,setlinewidth(0)"]
		DM;
		NFS;
		mmap;
		sync;
		E0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		//PC
	}
	subgraph logical {
		graph [rank = same]
		log_sys;
		log_prot;
		logFS;
		sched;
		F7;
		F0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		logical [
			fillcolor = "#6a9ab1",
			style = "filled,setlinewidth(0)"]
		log_mem [
			color = "#51bf5b",
			fillcolor = "#6a9ab1",
			label = "logical\nmemory"]
		//SW
	}
	subgraph HWI {
		graph [rank = same]
		HWI [
			fillcolor = "#71809b",
			label = "hardware\ninterfaces",
			style = "filled,setlinewidth(0)"]
		bus_drv;
		netif;
		block;
		//PA;
		IRQ;
		HID;
		G0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
	}
	subgraph HW {
		graph [rank = same]
		HW [
			fillcolor = "#777777",
			fontcolor = white,
			label = "electronics,\nhardware",
			row = chip,
			style = "filled,setlinewidth(0)"]
		buses;
		net_hw;
		SD;
		CPU;
		display;
		H0 [
			fixedsize = true,
			height = 0,
			shape = point,
			style = invis,
			width = 0]
		RAM;
	}
	bottom [
		label = "© 2007-2022 Costa Shulyupin http://www.MakeLinux.net/kernel/diagram",
		URL = "http://www.MakeLinux.net/kernel/diagram",
		shape = plaintext,
		style = ""]
	CPU -> bottom [style = invis]
	layers [
		fillcolor = lightgray,
		tooltip = "Functionalities are divided to common layers. It is approximate division.",
		height = 0.1,
		style = "filled,setlinewidth(0)",
		width = 0.5]
	functions -> layers [style = invis ]
	usr -> usr_ [
		arrowhead = "",
		color = "#d9e7eeff",
		minlen = 2]
	usr -> virt [
		color = "#d9e7eeff"]
	virt -> D0 [
		arrowhead = "",
		color = "#b2d3e4",
		minlen = 2]
	virt -> bridges [
		color = "#b2d3e4"]
	bridges -> E0 [
		arrowhead = "",
		color = "#91b5c9",
		minlen = 2,
		style = "filled,setlinewidth(6)",
		weight = ""]
	bridges -> logical [
		color = "#91b5c9",
		style = "filled,setlinewidth(6)"]
	logical -> F0 [
		arrowhead = "",
		color = "#6a9ab1",
		minlen = 2,
		row = logical,
		style = "filled,setlinewidth(6)",
		weight = ""]
	logical -> HWI [
		color = "#6a9ab1",
		row = logical,
		style = "filled,setlinewidth(6)"]
	HWI -> G0 [
		arrowhead = "",
		color = "#71809b",
		minlen = 2,
		row = HWI,
		style = "filled,setlinewidth(6)",
		weight = ""]
	HWI -> HW [
		color = "#71809b",
		row = HWI,
		style = "filled,setlinewidth(6)"]
	HW -> H0 [
		arrowhead = "",
		color = "#777777",
		minlen = 2,
		row = chip,
		style = "filled,setlinewidth(6)",
		weight = ""]
	layers -> usr [
		arrowhead = "",
		color = gray,
		style = "filled,setlinewidth(1)"]
	LKD [
		fontsize = 40,
		label = "Linux kernel diagram",
		shape = plain,
		style = ""]
	LKD -> processing [style = invis]
}

```







---

Steps

1. update manuscript text
2. section order via yaml file
3. call out boxes

**
2 call out blocks/boxes to emphasize main sections of parts II (e.g., vulnerable periods, experience effects) and III (e.g., # of time points, types of stability and change). Help to add some visuals to first sections of manuscript
**


xxxxxxxxxxx
Traditional Models
  -Linear
    - Difference Scores
    - Change Scores
  -Non-Linear
    - Signed-Rank test
    - Generalized Estimating Equations

Modern Approaches
  -Linear
    - Linear Mixed Models
  -Non-Linear
    - Generalized Linear Mixed Models

SEM
  - Variable-Centered
    - Autoregressive Crosslagged Panel Model
    - Latent Change Score
    - Latent Growth Curve Models
    - Multivariate Latent Growth Curve Models
    - State-Trait Models
  - Person-Centered
    - Latent Transition Analysis
    - Latent Class Growth Analysis
  - Hybrid
    - Growth Mixture Model

Advanced SEM
  - Random-Intercept Crosslagged Panel Model
  - Latent Curve Model with Structured Residuals

Longitudinal Twin Designs/Genetic Models

Longitudinal Neuroimaging


xxxxxxxxxx\

Traditional Models
  -Linear
    - Difference Scores
    - Change Scores
  -Non-Linear
    - Signed-Rank test
    - Generalized Estimating Equations

xxxxxxxxx
    - title: "Tutorials"
      contents:
        - tutorials.qmd
        - section: "Traditional Models"
          contents:
            - 1_Tutorials_DifferenceScores.qmd
            - 2_Tutorials_ResidualizedChangeScores.qmd
            - 3_Tutorials_LinearMixedModels.qmd
        - section: "Traditional Non-linear Models"
          contents:
            - 4_Tutorials_SignedRankTest.qmd
            - 5_Tutorials_MarginalModels.qmd
            - 6_Tutorials_GeneralizedEstimatingEquations.qmd
            - 7_Tutorials_GeneralizedLinearMixedEffectsModels.qmd
        - section: "SEM Approaches"
          contents:
            - 8_Tutorials_AutoregressiveCrosslaggedPanelModels.qmd
            - 9_Tutorials_LatentChangeScoresModels.qmd
            - 10_Tutorials_LatentGrowthCurveModels.qmd
            - 11_Tutorials_MultivariateLatentGrowthCurveModels.qmd
            - 12_Tutorials_LatentTransitionAnalysis.qmd
            - 13_Tutorials_GrowthMixtureModels.qmd
            - 14_Tutorials_StateTraitModels.qmd
        - section: "Advanced SEM"
          contents:
            - 15_Tutorials_RandomInterceptCrosslaggedPanelModels.qmd
            - 16_Tutorials_LatentCurveModelsStructuredResiduals.qmd
        - section: "Longitudinal Neuroimaging"
          contents:
            - blank.qmd
        - section: "Twin Modeling & Genetics Designs"
          contents:
            - blank.qmd
        - section: "Data Wrangling"
          contents:
            - blank.qmd
    - title: "How-To"
      contents:
        - howto.qmd
        - section: "Traditional Linear Models"
          contents:
            - section: "Difference Scores"
              contents:
                - 1a_HowTos_DifferenceScores_PairedTtests.qmd
                - 1b_HowTos_DifferenceScores_SimpleRegression.qmd
            - section: "Residualized Change Scores"
              contents:
                - 2_HowTos_ResidualizedChangeScores.qmd
            - section: "Linear Mixed Models"
              contents:
                - 3a_HowTos_LinearMixedModels.qmd
                - 3b_HowTos_LinearMixedModels.qmd
        - section: "Traditional Non-linear Models"
          contents:
            - section: "Signed-Rank Test"
              contents: 
                - 4_HowTos_SignedRankTest.qmd
            - section: "Marginal Models"
              contents:
                - 5_HowTos_MarginalModels.qmd
            - section: "Generalized Estimating Equations"
              contents:
                - 6_HowTos_GeneralizedEstimatingEquations.qmd
            - section: "Generalized Linear Mixed-Effects Models"
              contents:
                - 7_HowTos_GeneralizedLinearMixedEffectsModels.qmd
        - section: "SEM Approaches"
          contents:
            - section: "Autoregressive Crosslagged Panel Models"
              contents:
                - 8_HowTos_AutoregressiveCrosslaggedPanelModels.qmd
            - section: "Latent Change Scores Models"
              contents:
                - 9_HowTos_LatentChangeScoresModels.qmd
            - section: "LatentGrowthCurveModels"
              contents:
                - 10_HowTos_LatentGrowthCurveModels.qmd
            - section: "Multivariate Latent Growth Curve Models"
              contents:
                - 11_HowTos_MultivariateLatentGrowthCurveModels.qmd
            - section: "Latent Transition Analysis"
              contents:
                - 12_HowTos_LatentTransitionAnalysis.qmd
            - section: "Growth Mixture Models"
              contents:
                - 13_HowTos_GrowthMixtureModels.qmd
            - section: "State-Trait Models"
              contents:
                - 14_HowTos_StateTraitModels.qmd
        - section: "Advanced SEM"
          contents:
            - 15_HowTos_RandomInterceptCrosslaggedPanelModels.qmd
            - 16_HowTos_LatentCurveModelsStructuredResiduals.qmd
        - section: "Longitudinal Neuroimaging"
          contents:
            - blank.qmd
        - section: "Twin Modeling & Genetics Designs"
          contents:
            - blank.qmd
        - section: "Data Wrangling"
          contents:
            - blank.qmd
        # navigation items
    - title: "Explanations"
      contents:
        - explanations.qmd
        - section: "Traditional Linear Models"
          contents:
            - 1_Explanations_DifferenceScores.qmd
            - 2_Explanations_ResidualizedChangeScores.qmd
            - 3_Explanations_LinearMixedModels.qmd
        - section: "Traditional Non-linear Models"
          contents:
            - 4_Explanations_SignedRankTest.qmd
            - 5_Explanations_MarginalModels.qmd
            - 6_Explanations_GeneralizedEstimatingEquations.qmd
            - 7_Explanations_GeneralizedLinearMixedEffectsModels.qmd
        - section: "SEM Approaches"
          contents:
            - 8_Explanations_AutoregressiveCrosslaggedPanelModels.qmd
            - 9_Explanations_LatentChangeScoresModels.qmd
            - 10_Explanations_LatentGrowthCurveModels.qmd
            - 11_Explanations_MultivariateLatentGrowthCurveModels.qmd
            - 12_Explanations_LatentTransitionAnalysis.qmd
            - 13_Explanations_GrowthMixtureModels.qmd
            - 14_Explanations_StateTraitModels.qmd
        - section: "Advanced SEM"
          contents:
            - 15_Explanations_RandomInterceptCrosslaggedPanelModels.qmd
            - 16_Explanations_LatentCurveModelsStructuredResiduals.qmd
        - section: "Longitudinal Neuroimaging"
          contents:
            - blank.qmd
        - section: "Twin Modeling & Genetics Designs"
          contents:
            - blank.qmd
        - section: "Data Wrangling"
          contents:
            - blank.qmd
        # navigation items
  
    - title: "Reference"
      contents:
        - reference.qmd
        - section: "List of Reference Material"
          contents:
            - ListofReferences.qmd

    - title: "Documentation"
      contents:
        - documentation.qmd













xxxxxxxxxxx

![test](./figures/Mindmap1.png)

xxx

| fruit  | price  |
|--------|--------|
| apple  | 2.05   |
| pear   | 1.37   |
| orange | 3.09   |

: Fruit prices {.striped .hover}


xxx

xxx

```{r}
library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=-77.0168, lat=38.7814, popup="You are here - in Maryland!")

```

xxx

```{mermaid}

%%| fig-width: 6.5
%%| fig-height: 6.5

graph TB
A[LDA Structures] 
A -.-> |Focus on if & when an event occurs| B[Time-to-Event]
B -.-> C[Continuous-Time <br/>Survival Analysis]
B -.-> D[Discrete-Time <br/>Survival Analysis]
A -->|Focus on Change & Growth| E[Repeated Measures]
E -.-> F[Time-Series <br/> Models]
E -.-> G[Intensive <br/> Longitudinal Data]
E --> H[Longitudinal Panel Data]
H --Traditional Models--> J[Mean-level change & Marginal models]
H --Contemporary  Methods--> I[Within-person change & Random-effects models]

J --> K[ANOVA <br/> Generalized Estimating Equations <br/> ... ]
I --> L[Mixed Models <br/> Growth Curves <br/> ...]

click A href "https://www.github.com" "This is a link"
click B href "https://www.github.com" "This is a link"
click C href "https://www.github.com" "This is a link"
click D href "https://www.github.com" "This is a link"

style A fill:blue,stroke:#333,stroke-width:4px,color:#fff
style E fill:blue,stroke:#333,stroke-width:4px,color:#fff
style B fill:floralwhite,stroke:black
style C fill:floralwhite,stroke:black
style D fill:floralwhite,stroke:black
style F fill:floralwhite,stroke:black
style G fill:floralwhite,stroke:black

style H fill:blue,stroke:#333,stroke-width:4px,color:#fff
style J fill:blue,stroke:#333,stroke-width:2px,color:#fff
style I fill:blue,stroke:#333,stroke-width:2px,color:#fff
style K fill:blue,stroke:#333,stroke-width:2px,color:#fff,text-align:center
style L fill:blue,stroke:#333,stroke-width:2px,color:#fff,text-align:center

```

![FigmaLandingTest2](./figures/Figlanding5.svg) (remove marginal models from "examples" address (vs random-effects) in the manuscript)

-   section: "Traditional Linear Models" contents: - 1_Tutorials_DifferenceScores.qmd - 2_Tutorials_ResidualizedChangeScores.qmd - section: "Traditional Non-linear Models" contents: - 4_Tutorials_SignedRankTest.qmd - 6_Tutorials_GeneralizedEstimatingEquations.qmd (population average effects) - section: "Modern GLM Extensions(?)" - 7_Tutorials_LinearMixedModels.qmd\
    -   8_Tutorials_GeneralizedLinearMixedEffectsModels.qmd - section: "SEM Approaches" contents: - 8_Tutorials_AutoregressiveCrosslaggedPanelModels.qmd - 9_Tutorials_LatentChangeScoresModels.qmd - 10_Tutorials_LatentGrowthCurveModels.qmd - 11_Tutorials_MultivariateLatentGrowthCurveModels.qmd - 12_Tutorials_LatentTransitionAnalysis.qmd - 13_Tutorials_GrowthMixtureModels.qmd - 14_Tutorials_StateTraitModels.qmd - section: "Advanced SEM" contents: - 15_Tutorials_RandomInterceptCrosslaggedPanelModels.qmd - 16_Tutorials_LatentCurveModelsStructuredResiduals.qmd

GEE, on the other hand, is fitting a marginal model. These model population-averages. You're modeling the expectation conditional only on your fixed design matrix. GLMM is fitting a mixed-effects model; Thus the the estimates are subject-specific. What differs between GEE and GLMM is the target of inference: population-average or subject-specific.

This is in contrast to mixed effect models as explained above which condition on both the fixed design matrix and the random effects. So with the marginal model above you're saying, "forget about the difference among classrooms, I just want the population (school-wise) rate of failure and its association with gender." You fit the model and get an odds ratio that is the population-averaged odds ratio of failure associated with gender.

Molenberghs, Verbeke 2005 has an entire chapter on marginal vs. random effects models.

xxxxxx

|                                           |                         |                          |                                      |                         |
|:-----------------------------|:----------------------:|:---------------------:|:---------------------------:|:-----------------:|
| Models                                    |     Form of Change      | Minimum \# of Timepoints | Variable-Centered vs Person-Centered | Time-varying Covariates |
| Difference Scores                         |       mean-level        |            2+            |                  \-                  |          none           |
| Change Scores                             |       rank-order        |            2+            |                  \-                  |          none           |
| Signed-Rank Test                          |       rank-order        |            2+            |                  \-                  |          none           |
| Generalized Estimating Equations          |       rank-order        |            2+            |                  \-                  |         allowed         |
| Linear Mixed Models                       |   within and between    |            3+            |          Variable-Centered           |         allowed         |
| Generalized Linear Mixed-Effects Models   |   within and between    |            3+            |                                      |         allowed         |
| Autoregressive Crosslagged Panel Models   |       rank-order        |            3+            |          Variable-Centered           |         allowed         |
| Latent Change Scores Models               |       rank-order        |            2+            |          Variable-Centered           |         allowed         |
| Latent Growth Curve Models                |   within and between    |            3+            |          Variable-Centered           |         allowed         |
| Multivariate Latent Growth Curve Model    |   within and between    |            3+            |          Variable-Centered           |         allowed         |
| Latent Transition Analysis                |   within and between    |            3+            |                Mixed                 |         allowed         |
| Latent Class Growth Analysis              |   within and between    |            3+            |           Person-Centered            |         allowed         |
| Growth Mixture Models                     |   within and between    |            3+            |                Mixed                 |         allowed         |
| State-Trait Models                        | continuous and discrete |            3+            |          Variable-Centered           |         allowed         |
| Random-Intercept Crosslagged Panel Models |   within and between    |            4+            |          Variable-Centered           |         allowed         |
| Latent Curve Models Structured Residuals  |   within and between    |            4+            |          Variable-Centered           |         allowed         |
|                                           |                         |                          |                                      |                         |
: Models for the analysis of longitudinal data {.striped .hover .responsive-xl}



xxxxxx

2.  Models for Longitudinal Data Since both the GLMM and WGEE are extensions of the GLM, we start with a brief overview of the latter.

2.1 Generalized Linear Models (GLM)

LMM vs LGCM? For modeling growth, researchers typically employ some type of random effects model such that a mean growth trajectory is estimated for all observations in the data but a unique growth curve is estimated for each individual in the data as well (Curran & Bauer, 2011). These types of models are generally referred to as subject-specific models (Zeger, Liang, & Albert, 1988), which are more commonly known in psychology as growth curve models. Growth models have many aliases but can be broadly grouped into two different classes of methods: the latent-curve (LC) approach, which treats the repeated measures as multivariate (also known as the "wide" data format) and tends to be fit with general structural equation modeling (SEM) software (Meredith & Tisak, 1990; Tucker, 1958; Willett & Sayer, 1994), and the mixed-effect (ME) approach, which treats the repeated measures as univariate (also known as the "long" data format) and is generally fitted with regression software (Bryk & Raudenbush, 1987; Laird & Ware, 1982; Rao 1965).Footnote1

Over the past 20 years, methodological research has shown that the LC and ME approaches are actually nuanced twists on the same idea; they have been shown to converge, and to be mathematically equivalent in many cases (e.g., Bauer, 2003; Curran, 2003; Ledermann & Kenny, 2017; Mehta & Neale, 2005).

::: page-layout-custom
![FigmaLandingTest2](./figures/Figlanding2.svg)
:::

xxxxx It is important to match a theory of change with design and statistical model to assess change. (p. 4) Models with two time points cannot provide estimates of within-person change. "Stability" over time can reflect many things, only some of which mean a lack of change. (p. 14) It is helpful to describe not only average growth (e.g. intercept and slope means), but variances in the growth parameters. (p. 25)

Models that focus exclusively on mean-level change sometimes called Marginal Models Those that emphasize individual change often do so through inclusion of Random Effects often called "growth models"

xxxxx

```{mermaid}
mindmap
  root((mindmap))
    Origins
      Long history
      ::icon(fa fa-book)
      Popularisation
        British popular psychology author Tony Buzan
    Research
      On effectiveness<br/>and features
      On Automatic creation
        Uses
            Creative techniques
            Strategic planning
            Argument mapping
    Tools
      Pen and paper
      Mermaid

```

xxxxx

Longitudinal Psychometrics

xxxxxx

::: {style="color: red; border: solid black; background-color: grey;"}
This is the [middle section]{style="background-color: yellow; color: blue;"}
:::

::: grid
::: g-col-2
:::

::: g-col-8
::: {style="color: red; border: solid black; background-color: green;"}
Testing [Sample Test!]{style="background-color: yellow; color: blue;"}
:::
:::

::: g-col-2
:::
:::

The primary goal of the tutorial section is to help users learn and understand a specific topic or method by providing an introductory and hands-on, step-by-step guide. This section aims to create engaging, accessible, and effective entry learning experiences that enable users to develop their skills and understanding of the subject matter.

<br>

::: grid
::: g-col-2
:::

::: g-col-8
![](./figures/lights.png)
:::

::: g-col-2
:::
:::

::: {style="text-align: justify; text-align: center; line-height: normal; color: white; border: solid black; background-color: darkgoldenrod; padding: 70px; font-family: Georgia, serif;"}
This is the temporary landing page for the Longitudinal Analysis Project. <br> The site is currently under construction and used for testing purposes only. <br> Contents may be inaccurate.
:::

<br>

::: grid
::: g-col-2
:::

::: g-col-8
![](./figures/lights.png)
:::

::: g-col-2
:::
:::

</div>


|                                           |                         |                          |                                      |                         |
|:--------------|:-------------:|:-------------:|:-------------:|:-------------:|
| Models                                    |     Form of Change      | Minimum \# of Timepoints | Variable-Centered vs Person-Centered | Time-varying Covariates |
| Difference Scores                         |       mean-level        |            2+            |                  \-                  |          none           |
| Change Scores                             |       rank-order        |            2+            |                  \-                  |          none           |
| Signed-Rank Test                          |       rank-order        |            2+            |                  \-                  |          none           |
| Generalized Estimating Equations          |       rank-order        |            2+            |                  \-                  |         allowed         |
| Linear Mixed Models                       |   within and between    |            3+            |          Variable-Centered           |         allowed         |
| Generalized Linear Mixed-Effects Models   |   within and between    |            3+            |                                      |         allowed         |
| Autoregressive Crosslagged Panel Models   |       rank-order        |            3+            |          Variable-Centered           |         allowed         |
| Latent Change Scores Models               |       rank-order        |            2+            |          Variable-Centered           |         allowed         |
| Latent Growth Curve Models                |   within and between    |            3+            |          Variable-Centered           |         allowed         |
| Multivariate Latent Growth Curve Model    |   within and between    |            3+            |          Variable-Centered           |         allowed         |
| Latent Transition Analysis                |   within and between    |            3+            |                Mixed                 |         allowed         |
| Latent Class Growth Analysis              |   within and between    |            3+            |           Person-Centered            |         allowed         |
| Growth Mixture Models                     |   within and between    |            3+            |                Mixed                 |         allowed         |
| State-Trait Models                        | continuous and discrete |            3+            |          Variable-Centered           |         allowed         |
| Random-Intercept Crosslagged Panel Models |   within and between    |            4+            |          Variable-Centered           |         allowed         |
| Latent Curve Models Structured Residuals  |   within and between    |            4+            |          Variable-Centered           |         allowed         |
|                                           |                         |                          |                                      |                         |

: LDA Models {#tbl-lda .striped .hover .responsive-xl}

axasx

See @tbl-lda.
