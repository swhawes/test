{
  "hash": "3dba929285eeb91cdb41c36ef90fb2d8",
  "result": {
    "markdown": "---\ntitle: \"Latent Curve Models with Structured Residuals\"\nauthor: \"Biostatistics Working Group\"\n---\n\n\n## Overview\nIn this tutorial, we will explore Latent Curve Models with Structured Residuals (LCM-SR). LCM-SR allows for the separation of between-person and within-person components of individual change over time. By using structured residuals, we can account for time-varying covariates and interactions between variables at both the within-person and between-person levels.\n\n[+add diagrams/figures]\n\n### When to use Latent Curve Models with Structured Residuals?\nYou should use xxxxxxx in the following scenario:\n\n1.\tYou want to know xxxxx\n2.\tYour variable xxxxx\n3.\tYou have xxxxx \n\n### Getting Started with Latent Curve Models with Structured Residuals\n\n#### Prerequisites\nYou need to have the `lavaan` and `semTools` packages installed in R to perform LCM-SR. Install them using the following commands:\n\n\n::: {.cell hash='16_Tutorials_LatentCurveModelsStructuredResiduals_cache/html/unnamed-chunk-1_0fff165ee611dde5d8c9fc7dc23b362f'}\n\n```{.r .cell-code}\nif (!(\"lavaan\" %in% installed.packages())) install.packages(\"lavaan\")\nif (!(\"semTools\" %in% installed.packages())) install.packages(\"semTools\")\n```\n:::\n\n\n## Basic Example \nFor this tutorial, we will use simulated data with 500 individuals and 5 timepoints. The data will include a time-varying covariate, covariate, and an outcome variable, outcome.\n\n\n::: {.cell hash='16_Tutorials_LatentCurveModelsStructuredResiduals_cache/html/unnamed-chunk-2_e3cb3275c50b027d508d8a6b2dd71d7c'}\n\n```{.r .cell-code}\nset.seed(123)\nlibrary(lavaan)\nlibrary(semTools)\n\n# Simulate data\nn <- 500\ntimepoints <- 5\n\nid <- rep(1:n, each = timepoints)\ntime <- rep(1:timepoints, n)\n\ncovariate <- rnorm(n * timepoints, mean = 0, sd = 1)\noutcome <- rnorm(n * timepoints, mean = 0, sd = 1)\n\ndata <- data.frame(id, time, covariate, outcome)\n```\n:::\n\n\n### Model Specification and Estimation\nTo specify an LCM-SR, we will use the lavaan syntax to define the measurement model and the structural model. We will model the linear growth of the outcome variable while accounting for the effect of the time-varying covariate.\n\n\n::: {.cell hash='16_Tutorials_LatentCurveModelsStructuredResiduals_cache/html/unnamed-chunk-3_3564f585c22b8ee4ac520a5145f52d56'}\n\n```{.r .cell-code}\nmodel <- '\n  # Latent variables\n  intercept =~ 1 * outcome_t1 + 1 * outcome_t2 + 1 * outcome_t3 + 1 * outcome_t4 + 1 * outcome_t5\n  slope =~ 0 * outcome_t1 + 1 * outcome_t2 + 2 * outcome_t3 + 3 * outcome_t4 + 4 * outcome_t5\n\n  # Time-varying covariate effect on outcome\n  outcome_t1 ~ c1 * covariate_t1\n  outcome_t2 ~ c2 * covariate_t2\n  outcome_t3 ~ c3 * covariate_t3\n  outcome_t4 ~ c4 * covariate_t4\n  outcome_t5 ~ c5 * covariate_t5\n\n  # Residual variances and covariances\n  outcome_t1 ~~ r1 * outcome_t1\n  outcome_t2 ~~ r2 * outcome_t2\n  outcome_t3 ~~ r3 * outcome_t3\n  outcome_t4 ~~ r4 * outcome_t4\n  outcome_t5 ~~ r5 * outcome_t5\n\n  # Latent variable variances\n  intercept ~~ i_var * intercept\n  slope ~~ s_var * slope\n\n  # Latent variable covariances\n  intercept ~~ i_s_cov * slope\n'\n```\n:::\n\n\nModel Estimation\nNow we will estimate the model using the lavaan function sem().\n\n\n::: {.cell hash='16_Tutorials_LatentCurveModelsStructuredResiduals_cache/html/unnamed-chunk-4_5b73b6895b1ca9f99cb93bfb40b43dcc'}\n\n```{.r .cell-code}\n# Reshape data to wide format\nwide_data <- spread(data, key = time, value = outcome, sep\n```\n:::\n\n### Interpreting the Results\nxxxxx\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}